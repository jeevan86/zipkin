<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2015-2017 The OpenZipkin Authors

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
    in compliance with the License. You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License
    is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
    or implied. See the License for the specific language governing permissions and limitations under
    the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>io.zipkin.java</groupId>
        <artifactId>parent</artifactId>
        <version>1.24.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>zipkin-itm</artifactId>
    <name>zipkin-itm</name>

    <properties>
        <main.basedir>${project.basedir}/..</main.basedir>
        <main.java.version>1.8</main.java.version>
        <main.signature.artifact>java18</main.signature.artifact>
        <start-class>zipkin.server.ZipkinServer</start-class>
        <maven-invoker-plugin.version>2.0.0</maven-invoker-plugin.version>
        <main.basedir>${project.basedir}/..</main.basedir>
        <!-- This is pinned to Kafka 0.8.x client as 0.9.x brokers work with them, but not visa-versa
             http://docs.confluent.io/2.0.0/upgrade.html -->
        <kafka.version>0.10.2.0</kafka.version>
        <jedis.version>2.8.2</jedis.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Import dependency management from Spring Boot -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- zipkin requires exporting /health endpoint -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zipkin</artifactId>
        </dependency>

        <!-- Static content for the web UI -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zipkin-autoconfigure-ui</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Cassandra backend -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zipkin-autoconfigure-storage-cassandra</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Cassandra 3 backend -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zipkin-autoconfigure-storage-cassandra3</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Elasticsearch http backend -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zipkin-autoconfigure-storage-elasticsearch-http</artifactId>
            <optional>true</optional>
        </dependency>

        <!--&lt;!&ndash; Elasticsearch aws support &ndash;&gt;-->
        <!--<dependency>-->
        <!--<groupId>${project.groupId}</groupId>-->
        <!--<artifactId>zipkin-autoconfigure-storage-elasticsearch-aws</artifactId>-->
        <!--<optional>true</optional>-->
        <!--</dependency>-->

        <!--&lt;!&ndash; MySQL backend &ndash;&gt;-->
        <!--<dependency>-->
        <!--<groupId>${project.groupId}</groupId>-->
        <!--<artifactId>zipkin-autoconfigure-storage-mysql</artifactId>-->
        <!--<optional>true</optional>-->
        <!--</dependency>-->

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.10</artifactId>
            <version>${kafka.version}</version>
            <!-- don't eagerly bind slf4j -->
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Scribe Collector -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zipkin-autoconfigure-collector-scribe</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Prometheus metrics -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zipkin-autoconfigure-metrics-prometheus</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Trace api controller activity with Brave -->
        <dependency>
            <groupId>io.zipkin.brave</groupId>
            <artifactId>brave</artifactId>
            <version>${brave.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.zipkin.brave</groupId>
            <artifactId>brave-spring-web-servlet-interceptor</artifactId>
            <version>${brave.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>io.zipkin.brave</groupId>
            <artifactId>brave-okhttp</artifactId>
            <version>${brave.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zipkin</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <version>2.2.0</version>
            <scope>test</scope>
        </dependency>

        <!-- redis -->
        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>${jedis.version}</version>
        </dependency>

        <!-- json -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.8.5</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.8.5</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.8.5</version>
        </dependency>

        <!-- test -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zipkin</artifactId>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>